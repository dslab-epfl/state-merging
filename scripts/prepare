#!/bin/bash
#
# Prepare a program to be compild with LLVM :)
#
PREPARE=prepare

echo "makefile prepare script"
echo "-----------------------"
echo ""
echo "should help you directly compile software to llvm"
echo ""

#
# Check if CLOUD9_ROOT is set. If not, maybe we can set it :)
#
if [ "$CLOUD9_ROOT" == "" ]
then
	if [ "${0:0:1}" == "/" ] 
	then
		# we have an absolute path
		export CLOUD9_ROOT="`dirname $0`/../"
        else
		# we have a relative path
		export CLOUD9_ROOT="`pwd`/`dirname $0`/../"
	fi
fi
echo "CLOUD9_ROOT is set to $CLOUD9_ROOT"

#
# Check for LLVM_LIB_SEARCH_PATH
#
if [ "$LLVM_LIB_SEARCH_PATH" == "" ]
then
	if [ "`which llvm-gcc`" == "" ]
	then
		echo "llvm-gcc is not in the PATH! Please fix that and make sure \"which llvm-gcc\" returns its path!"
		exit 1
	fi
	export LLVM_LIB_SEARCH_PATH=$(dirname $(which llvm-gcc))/../lib64:$LD_LIBRARY_PATH
fi
echo "LLVM_LIB_SEARCH_PATH is set to $LLVM_LIB_SEARCH_PATH"
echo 

#
# Check the path where the script was called
#
if [ -f "`pwd`/klee-gcc" ] 
then
	echo "The $PREPARE script should be called in the obj-llvm folder of the target application."
	exit 1
fi

#
# Get the correct paths for the makefiles and code
#
MAKEFILE_DIR=`pwd`
SOURCE_DIR=`pwd | sed 's|/obj-llvm||'`
echo "MAKEFILE_DIR is $MAKEFILE_DIR"
echo "SOURCE_DIR is $SOURCE_DIR"

#
# Check for the config.log
#
if [ ! -f $SOURCE_DIR/config.log ]
then
	echo
	echo "WARNING: You should run this script again after you do \"./configure\"! If the program doesn't have a configure script, that's okay."
	echo "... wait 10 seconds ..."
	sleep 10
fi

#
# LLVM-specific tweaks :)
#
echo ""

# 1. Tweak the FD_ZERO and FD_SET to get rid of the inline assembly
echo "1. Tweaking FD_ZERO and FD_SET inline assembly"
for ext in c C cc CC cpp CPP 
do
	for a in `grep 'FD_' $SOURCE_DIR/.. -R -n | grep '\.'$ext':' | sed 's/\.'$ext':.*/\.'$ext'/' | uniq`
	do 
		if [ ! -f $a ]
		then
			echo -e "\ttweaking: $a"
			mv $a $a.bak
			echo -e "#undef __GNUC__\n#define __GNUC__ 1" > $a; cat $a.bak >> $a
		else
			echo -e "\tskipping: $a (already tweaked)"
		fi
	done
done

# 2. Tweak the -DXYZDIR=\"/path/to/file/" -s that break the build when replaced in the executable
echo "2. Tweaking -DXYZDIR for correct replacement in the executable"
for file in `find $MAKEFILE_DIR -name Makefile`
do
	echo -e "\ttweaking: $file"
	sed -i 's|-D\([^=]*\)=\\"$(\([^\ ]*\))\\"|'\''-D\1=\\"$(\2)\\"'\''|g' $file
done

# 3. Tweak the compiler
echo "3. Tweaking Makefiles"
for a in `find $MAKEFILE_DIR/ -name "Makefile" -or -name "libtool"`
do 
	echo -e "\ttweaking: $a -- `cat $a | grep '^LIBS'`"
	sed -i 's| gcc$|'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's| gcc |'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's|=gcc$|'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's|=gcc |'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's| g++$|'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's| g++ |'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's|=g++$|'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's|=g++ |'" $CLOUD9_ROOT/scripts/klee-gcc |" $a
	sed -i 's| ld$| llvm-ld |' $a
	sed -i 's| ld | llvm-ld |' $a
	sed -i 's|=ld$|=llvm-ld |' $a
	sed -i 's|=ld |=llvm-ld |' $a
	sed -i 's| ar$| llvm-ar |' $a
	sed -i 's| ar | llvm-ar |' $a
	sed -i 's|=ar$|=llvm-ar |' $a
	sed -i 's|=ar |=llvm-ar |' $a
	sed -i 's| ranlib | llvm-ranlib |' $a
	sed -i 's| ranlib$| llvm-ranlib |' $a
	sed -i 's|=ranlib |=llvm-ranlib |' $a
	sed -i 's|=ranlib$|=llvm-ranlib |' $a
done

# 4. Final message
echo
echo "After you checked the LIBS are correctly set, use \"make\" to build to LLVM!"
echo
