#!/usr/bin/env python


import os, sys, subprocess


LLVM_LD_PATH = "/home/zamf/llvm/llvm-2.6/Release/bin/"
LLVM_GCC_PATH = "/home/zamf/llvm/llvm-gcc4.2-2.6.source/install/bin/"

def isLinkCommand():
    # Look for '-Wl,' as a signal that we are calling the linker. What a hack.
    for arg in sys.argv:
        if arg.startswith('-Wl,'):
            return True
        if arg.startswith('-l'):
            return True

def main():
    if not isLinkCommand():
        args = ""
        for i in sys.argv[1:]:
            args = args + " " + i
        p = subprocess.Popen(LLVM_GCC_PATH + "llvm-gcc" + " -emit-llvm " + args, shell=True)
        os.waitpid(p.pid, 0)[1]
        return 1

    # Otherwise, strip out arguments that llvm-ld doesn't understand. I don't
    # want my previous explicit declaration of hackyness to imply that this bit
    # of code here is not also a complete and total hack, it is.
    args = sys.argv[1:]
    linkArgs = " --link-as-library "
    for a in args:
        if a in ('-g', '-W', '-O', '-D', '-f',
                 '-fnested-functions', '-pthread',
                 '-m32', '-shared', '-static', '-dynamic', '--param', '-fno-exceptions'):
            continue
        elif a.startswith('-Wl,'):
            continue
        elif a.startswith('-D'):
            continue
        elif a.startswith('-O'):
            continue
        elif a.startswith('-I'):
            continue
        elif a.startswith('max-inline'):
            continue

        linkArgs = linkArgs + " " + a
    
    p = subprocess.Popen(LLVM_LD_PATH + "llvm-ld"  + " --disable-opt" + linkArgs, shell=True)
    os.waitpid(p.pid, 0)[1]
    return 1

if __name__ == '__main__':
    main()

# #!/bin/sh

# LLVM_LD=$KLEE_ROOT/llvm/Release/bin/llvm-ld

# IS_LINKER=0
# LINKER_ARGS=--link-as-library
# for arg in $*; do
#     if [ `expr match $arg -Wl,` -eq 4 ]; then
# 	IS_LINKER=1
#     elif [ $arg = "-g" ]; then 
#         true # skip for linker 
#     else
# 	if [ `expr match $arg -l` -eq 2 ]; then
# 	    IS_LINKER=1
# 	fi
	
# 	if [ ! `expr match $arg -W` -eq 2 ] && [ ! `expr match $arg -D` -eq 2 ] && [ ! `expr match $arg -f` -eq 2 ]  && [ ! `expr match $arg -pthread` -eq 8 ]
# 	then
#             LINKER_ARGS="$LINKER_ARGS $arg"
# 	fi
#     fi
# done

# if [ $IS_LINKER = 1 ]
# then
#     echo "klee-gcc: running llvm-ld --disable-opt" $LINKER_ARGS
#     $LLVM_LD -v --disable-opt $LINKER_ARGS    
# else
#     llvm-gcc --emit-llvm -include $KLEE_ROOT/include/klee/klee.h -include $KLEE_ROOT/include/klee/klee-float.h -fnested-functions $@
# fi

