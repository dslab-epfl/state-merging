#!/usr/bin/env python

import os, sys

def isLinkCommand():
    # Look for '-Wl,' as a signal that we are calling the linker. What a hack.
    for arg in sys.argv:
        if arg.startswith('-Wl,'):
            return True
        if arg.startswith('-l'):
        	return True

def main():
    if not isLinkCommand():
        os.execvp("llvm-gcc", ["llvm-gcc", "-emit-llvm"] + sys.argv[1:])
        return 1

    # Otherwise, strip out arguments that llvm-ld doesn't understand. I don't
    # want my previous explicit declaration of hackyness to imply that this bit
    # of code here is not also a complete and total hack, it is.
    args = sys.argv[1:]
    linkArgs = []
    for a in args:
    	skip = False
        for prefix in ('-g', '-W', '-O', '-D', '-f',
                 '-fnested-functions', '-pthread', '-std', '-Wl,'):
            if a.startswith(prefix):
            	skip = True
            	break
    	
    	if skip:
    		continue
    	
        linkArgs.append(a)
    print "Linking with arguments: " + " ".join(linkArgs)
    
    os.execvp("llvm-ld", ["llvm-ld", "--disable-opt"] + linkArgs)
    return 1

if __name__ == '__main__':
    main()

